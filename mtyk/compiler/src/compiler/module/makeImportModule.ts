import path from "path";
import { getPackageOrg } from "../constants";
import { makeModule } from "./makeModule";

export async function makeImportModule(
  imports: string[],
  moduleSubName: string,
  moduleContent?: (
    makeImport: (i: string, variable: string) => string,
    isCjs?: boolean
  ) => string
) {
  const modulePath = path.join("built-modules", moduleSubName);
  const packageJSON = {
    name: `${await getPackageOrg()}/${moduleSubName}`,
    version: "0.0.1",
    private: true,
    main: "./index.js",
    index: "./index.js",
    exports: {
      ".": {
        import: "./index.js",
        require: "./index.cjs",
      },
      "./package.json": "./package.json",
    },
  };
  const fileMap = new Map<string, string>();
  const indexJs = `// Auto-generated by bbuild

${imports.map((i) => `import '${i}'`).join("\n")}
${moduleContent?.((i, variable) => `import ${variable} from '${i}'`) ?? ""}
`;
  fileMap.set("index.js", indexJs);

  const indexCjs = `// Auto-generated by bbuild

${imports.map((i) => `require('${i}')`).join("\n")}
${
  moduleContent?.(
    (i, variable) => `const ${variable} = require('${i}').default`,
    true
  ) ?? ""
}
`;
  fileMap.set("index.cjs", indexCjs);

  // Create the module
  await makeModule(modulePath, fileMap, packageJSON);
}
